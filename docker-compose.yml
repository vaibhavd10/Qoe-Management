version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: qoe_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/qoe_platform
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-here
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - OPENAI_API_KEY=your-openai-api-key
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - uploads:/app/uploads

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://backend:8000
    depends_on:
      - backend

  celery-worker:
    build: ./backend
    command: celery -A app.tasks.document_tasks worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/qoe_platform
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-here
      - OPENAI_API_KEY=your-openai-api-key
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - uploads:/app/uploads

  celery-beat:
    build: ./backend
    command: celery -A app.tasks.document_tasks beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/qoe_platform
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-here
      - OPENAI_API_KEY=your-openai-api-key
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app

  flower:
    build: ./backend
    command: celery -A app.tasks.document_tasks flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/qoe_platform
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-here
    depends_on:
      - redis
    volumes:
      - ./backend:/app

volumes:
  postgres_data:
  uploads: